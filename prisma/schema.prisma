// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

model User {
    id             String    @id @default(auto()) @map("_id") @db.ObjectId
    name           String
    email          String    @unique
    masterPassword String
    emailVerified  DateTime?

    accounts Account[]
}

enum PasswordStrength {
    TOO_WEAK
    WEAK
    MEDIUM
    STRONG
}

model Account {
    id                String           @id @default(auto()) @map("_id") @db.ObjectId
    siteName          String
    siteLink          String
    email             String
    password          String
    passwordStrength  PasswordStrength
    addedAt           DateTime         @default(now())
    passwordUpdatedAt DateTime         @default(now())
    favoritedAt       DateTime?
    userId            String           @db.ObjectId
    siteId            String           @db.ObjectId

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)
    site Site @relation(fields: [siteId], references: [id], onDelete: NoAction)
}

model Site {
    id                 String   @id @default(auto()) @map("_id") @db.ObjectId
    canonicalHostname  String   @unique()
    isSecured          Boolean
    securityIssues     String[] @default([])
    certificateDetails Json?
    lastCheckedAt      DateTime @default(now())

    accounts Account[]
}

model VerificationToken {
    id      String   @id @default(auto()) @map("_id") @db.ObjectId
    email   String   @unique
    token   String
    expires DateTime
}
